/* Generated By:JavaCC: Do not edit this line. JavaParserConstants.java */
package com.qualixium.nbshell.jcclexer;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JavaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHITESPACE = 1;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 2;
  /** RegularExpression Id. */
  int IF = 3;
  /** RegularExpression Id. */
  int THEN = 4;
  /** RegularExpression Id. */
  int ELSE = 5;
  /** RegularExpression Id. */
  int ELIF = 6;
  /** RegularExpression Id. */
  int FI = 7;
  /** RegularExpression Id. */
  int CASE = 8;
  /** RegularExpression Id. */
  int ESAC = 9;
  /** RegularExpression Id. */
  int FOR = 10;
  /** RegularExpression Id. */
  int SELECT = 11;
  /** RegularExpression Id. */
  int WHILE = 12;
  /** RegularExpression Id. */
  int UNTIL = 13;
  /** RegularExpression Id. */
  int DO = 14;
  /** RegularExpression Id. */
  int DONE = 15;
  /** RegularExpression Id. */
  int IN = 16;
  /** RegularExpression Id. */
  int FUNCTION = 17;
  /** RegularExpression Id. */
  int TIME = 18;
  /** RegularExpression Id. */
  int COPROC = 19;
  /** RegularExpression Id. */
  int CAT = 20;
  /** RegularExpression Id. */
  int CD = 21;
  /** RegularExpression Id. */
  int CHMOD = 22;
  /** RegularExpression Id. */
  int CHOWN = 23;
  /** RegularExpression Id. */
  int CLEAR = 24;
  /** RegularExpression Id. */
  int CP = 25;
  /** RegularExpression Id. */
  int CRONTAB = 26;
  /** RegularExpression Id. */
  int DATE = 27;
  /** RegularExpression Id. */
  int DF = 28;
  /** RegularExpression Id. */
  int DIFF = 29;
  /** RegularExpression Id. */
  int DU = 30;
  /** RegularExpression Id. */
  int ECHO = 31;
  /** RegularExpression Id. */
  int EXPORT = 32;
  /** RegularExpression Id. */
  int FILE = 33;
  /** RegularExpression Id. */
  int FIND = 34;
  /** RegularExpression Id. */
  int FREE = 35;
  /** RegularExpression Id. */
  int FTP = 36;
  /** RegularExpression Id. */
  int GREP = 37;
  /** RegularExpression Id. */
  int IFCONFIG = 38;
  /** RegularExpression Id. */
  int KILL = 39;
  /** RegularExpression Id. */
  int LESS = 40;
  /** RegularExpression Id. */
  int LN = 41;
  /** RegularExpression Id. */
  int LOCATE = 42;
  /** RegularExpression Id. */
  int LPR = 43;
  /** RegularExpression Id. */
  int LS = 44;
  /** RegularExpression Id. */
  int MAN = 45;
  /** RegularExpression Id. */
  int MKDIR = 46;
  /** RegularExpression Id. */
  int MOUNT = 47;
  /** RegularExpression Id. */
  int MV = 48;
  /** RegularExpression Id. */
  int PASSWD = 49;
  /** RegularExpression Id. */
  int PING = 50;
  /** RegularExpression Id. */
  int PS = 51;
  /** RegularExpression Id. */
  int PWD = 52;
  /** RegularExpression Id. */
  int RM = 53;
  /** RegularExpression Id. */
  int RMDIR = 54;
  /** RegularExpression Id. */
  int SCP = 55;
  /** RegularExpression Id. */
  int SERVICE = 56;
  /** RegularExpression Id. */
  int SHUTDOWN = 57;
  /** RegularExpression Id. */
  int SORT = 58;
  /** RegularExpression Id. */
  int SSH = 59;
  /** RegularExpression Id. */
  int SU = 60;
  /** RegularExpression Id. */
  int TAIL = 61;
  /** RegularExpression Id. */
  int TAR = 62;
  /** RegularExpression Id. */
  int TOP = 63;
  /** RegularExpression Id. */
  int TOUCH = 64;
  /** RegularExpression Id. */
  int UNAME = 65;
  /** RegularExpression Id. */
  int UNZIP = 66;
  /** RegularExpression Id. */
  int VIM = 67;
  /** RegularExpression Id. */
  int WGET = 68;
  /** RegularExpression Id. */
  int WHATIS = 69;
  /** RegularExpression Id. */
  int WHEREIS = 70;
  /** RegularExpression Id. */
  int WHO = 71;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 72;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 73;
  /** RegularExpression Id. */
  int HEX_LITERAL = 74;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 75;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 76;
  /** RegularExpression Id. */
  int DECIMAL_FLOATING_POINT_LITERAL = 77;
  /** RegularExpression Id. */
  int DECIMAL_EXPONENT = 78;
  /** RegularExpression Id. */
  int HEXADECIMAL_FLOATING_POINT_LITERAL = 79;
  /** RegularExpression Id. */
  int HEXADECIMAL_EXPONENT = 80;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 81;
  /** RegularExpression Id. */
  int STRING_LITERAL = 82;
  /** RegularExpression Id. */
  int IDENTIFIER = 83;
  /** RegularExpression Id. */
  int LETTER = 84;
  /** RegularExpression Id. */
  int PART_LETTER = 85;
  /** RegularExpression Id. */
  int LPAREN = 86;
  /** RegularExpression Id. */
  int RPAREN = 87;
  /** RegularExpression Id. */
  int LBRACE = 88;
  /** RegularExpression Id. */
  int RBRACE = 89;
  /** RegularExpression Id. */
  int LBRACKET = 90;
  /** RegularExpression Id. */
  int RBRACKET = 91;
  /** RegularExpression Id. */
  int DLBRACKET = 92;
  /** RegularExpression Id. */
  int DRBRACKET = 93;
  /** RegularExpression Id. */
  int SEMICOLON = 94;
  /** RegularExpression Id. */
  int COMMA = 95;
  /** RegularExpression Id. */
  int DOT = 96;
  /** RegularExpression Id. */
  int ASSIGN = 97;
  /** RegularExpression Id. */
  int LT = 98;
  /** RegularExpression Id. */
  int BANG = 99;
  /** RegularExpression Id. */
  int TILDE = 100;
  /** RegularExpression Id. */
  int HOOK = 101;
  /** RegularExpression Id. */
  int COLON = 102;
  /** RegularExpression Id. */
  int EQ = 103;
  /** RegularExpression Id. */
  int LE = 104;
  /** RegularExpression Id. */
  int GE = 105;
  /** RegularExpression Id. */
  int NE = 106;
  /** RegularExpression Id. */
  int SC_OR = 107;
  /** RegularExpression Id. */
  int SC_AND = 108;
  /** RegularExpression Id. */
  int INCR = 109;
  /** RegularExpression Id. */
  int DECR = 110;
  /** RegularExpression Id. */
  int PLUS = 111;
  /** RegularExpression Id. */
  int MINUS = 112;
  /** RegularExpression Id. */
  int STAR = 113;
  /** RegularExpression Id. */
  int SLASH = 114;
  /** RegularExpression Id. */
  int BIT_AND = 115;
  /** RegularExpression Id. */
  int BIT_OR = 116;
  /** RegularExpression Id. */
  int XOR = 117;
  /** RegularExpression Id. */
  int REM = 118;
  /** RegularExpression Id. */
  int LSHIFT = 119;
  /** RegularExpression Id. */
  int PLUSASSIGN = 120;
  /** RegularExpression Id. */
  int MINUSASSIGN = 121;
  /** RegularExpression Id. */
  int STARASSIGN = 122;
  /** RegularExpression Id. */
  int SLASHASSIGN = 123;
  /** RegularExpression Id. */
  int ANDASSIGN = 124;
  /** RegularExpression Id. */
  int ORASSIGN = 125;
  /** RegularExpression Id. */
  int XORASSIGN = 126;
  /** RegularExpression Id. */
  int REMASSIGN = 127;
  /** RegularExpression Id. */
  int LSHIFTASSIGN = 128;
  /** RegularExpression Id. */
  int RSIGNEDSHIFTASSIGN = 129;
  /** RegularExpression Id. */
  int RUNSIGNEDSHIFTASSIGN = 130;
  /** RegularExpression Id. */
  int ELLIPSIS = 131;
  /** RegularExpression Id. */
  int BAD_QUOTE = 132;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "<SINGLE_LINE_COMMENT>",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"elif\"",
    "\"fi\"",
    "\"case\"",
    "\"esac\"",
    "\"for\"",
    "\"select\"",
    "\"while\"",
    "\"until\"",
    "\"do\"",
    "\"done\"",
    "\"in\"",
    "\"function\"",
    "\"time\"",
    "\"coproc\"",
    "\"cat\"",
    "\"cd\"",
    "\"chmod\"",
    "\"chwon\"",
    "\"clear\"",
    "\"cp\"",
    "\"crontab\"",
    "\"date\"",
    "\"df\"",
    "\"diff\"",
    "\"du\"",
    "\"echo\"",
    "\"export\"",
    "\"file\"",
    "\"find\"",
    "\"free\"",
    "\"ftp\"",
    "\"grep\"",
    "\"ifconfig\"",
    "\"kill\"",
    "\"less\"",
    "\"ln\"",
    "\"locate\"",
    "\"lpr\"",
    "\"ls\"",
    "\"man\"",
    "\"mkdir\"",
    "\"mount\"",
    "\"mv\"",
    "\"passwd\"",
    "\"ping\"",
    "\"ps\"",
    "\"pwd\"",
    "\"rm\"",
    "\"rmdir\"",
    "\"scp\"",
    "\"service\"",
    "\"shutdown\"",
    "\"sort\"",
    "\"ssh\"",
    "\"su\"",
    "\"tail\"",
    "\"tar\"",
    "\"top\"",
    "\"touch\"",
    "\"uname\"",
    "\"unzip\"",
    "\"vim\"",
    "\"wget\"",
    "\"whatis\"",
    "\"whereis\"",
    "\"who\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<DECIMAL_FLOATING_POINT_LITERAL>",
    "<DECIMAL_EXPONENT>",
    "<HEXADECIMAL_FLOATING_POINT_LITERAL>",
    "<HEXADECIMAL_EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<PART_LETTER>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"[[\"",
    "\"]]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\">>>=\"",
    "\"...\"",
    "\"`\"",
    "<token of kind 133>",
  };

}
